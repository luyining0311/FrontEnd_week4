{"version":3,"file":"static/js/main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;;AAEA;AAAA;;AACA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AANA;AAQA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;AACA;AAAA;AAIA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAOA;;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAYA;;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAgBA;;AAEA;AACA;;AAlIA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAkCA;AArDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["C:/Users/skye_/hello-modern/src/App.jsx","C:/Users/skye_/hello-modern/src/TodoApp.jsx","C:/Users/skye_/hello-modern/src/TodoFooter.jsx","C:/Users/skye_/hello-modern/src/App.css"],"sourcesContent":["import './App.css';\nimport { TodoModel } from './todoModel';\nimport { TodoApp } from './TodoApp';\n\nconst model = new TodoModel('react-todos');\nconst App = () => <TodoApp model={model} />;\n\nexport default App;\n","import { useState } from 'react';\nimport { TodoFooter } from './TodoFooter';\nimport { TodoItem } from './TodoItem';\n\nexport function TodoApp(props) {\n  const { model } = props;\n  const [editing, setEditing] = useState(null);\n  const [newTodo, setNewTodo] = useState('');\n  const [nowShowing, setNowShowing] = useState('all');\n  const [status, setStatus] = useState(true);\n  const ENTER_KEY = 13;\n  const ALL_TODOS = 'all';\n  const ACTIVE_TODOS = 'active';\n  const COMPLETED_TODOS = 'completed';\n\n  function handleChange(event) {\n    setNewTodo(event.target.value);\n  }\n  function handleKeyDown(event) {\n    if (event.keyCode === ENTER_KEY) {\n      event.preventDefault();\n      const val = newTodo.trim();\n      if (val) {\n        model.addTodo(val);\n        setNewTodo('');\n      }\n    }\n  }\n  function toggle(todoTodoggle) {\n    model.toggle(todoTodoggle);\n    setStatus(!status);\n  }\n  function toggleAll(event) {\n    model.toggleAll(event.target.checked);\n    setStatus(!status);\n  }\n  function destroy(todo) {\n    model.destroy(todo);\n    setStatus(!status);\n  }\n  function edit(todo) {\n    setEditing(todo.id);\n  }\n  function save(todoToSave, text) {\n    model.save(todoToSave, text);\n    setEditing(null);\n  }\n  function cancel() {\n    setEditing(null);\n  }\n  function clearCompleted() {\n    model.clearCompleted();\n    setStatus(!status);\n  }\n  function createTodoApp() {\n    let footer, main;\n    const { todos } = model;\n    const shownTodos = todos.filter(todo => {\n      switch (nowShowing) {\n        case ACTIVE_TODOS:\n          return !todo.completed;\n        case COMPLETED_TODOS:\n          return todo.completed;\n        default:\n          return true;\n      }\n    });\n    const todoItems = shownTodos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        onToggle={() => toggle(todo)}\n        onDestroy={() => destroy(todo)}\n        onEdit={() => edit(todo)}\n        isEditing={editing === todo.id}\n        onSave={text => save(todo, text)}\n        onCancel={() => cancel()}\n      />\n    ));\n\n    const activeTodoCount = todos.reduce(\n      (accum, todo) => (todo.completed ? accum : accum + 1),\n      0,\n    );\n\n    const completedCount = todos.length - activeTodoCount;\n\n    if (activeTodoCount || completedCount) {\n      footer = (\n        <TodoFooter\n          count={activeTodoCount}\n          completedCount={completedCount}\n          nowShowing={nowShowing}\n          onClearCompleted={() => clearCompleted()}\n        />\n      );\n    }\n\n    if (todos.length) {\n      main = (\n        <section className=\"main\">\n          <input\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            onChange={event => toggleAll(event)}\n            checked={activeTodoCount === 0}\n          />\n          <label htmlFor=\"toggle-all\" />\n          <ul className=\"todo-list\">{todoItems}</ul>\n        </section>\n      );\n    }\n\n    return (\n      <div className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={newTodo}\n            onKeyDown={event => handleKeyDown(event)}\n            onChange={event => handleChange(event)}\n            autoFocus={true}\n          />\n        </header>\n        {main}\n        {footer}\n      </div>\n    );\n  }\n\n  return createTodoApp();\n}\n","import classNames from 'classNames';\nimport { Utils } from '../utils';\n\nexport function TodoFooter(props) {\n  const { count, completedCount, nowShowing, onClearCompleted } = props;\n  const activeTodoWord = Utils.pluralize(count, 'item');\n  let clearButton = null;\n  const ALL_TODOS = 'all';\n  const ACTIVE_TODOS = 'active';\n  const COMPLETED_TODOS = 'completed';\n\n  if (completedCount > 0) {\n    clearButton = (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={onClearCompleted}>\n        Clear completed\n      </button>\n    );\n  }\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{count}</strong> {activeTodoWord} left\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <a\n            // href=\"#/\"\n            className={classNames({ selected: nowShowing === ALL_TODOS })}>\n            All\n          </a>\n        </li>{' '}\n        <li>\n          <a\n            // href=\"#/active\"\n            className={classNames({\n              selected: nowShowing === ACTIVE_TODOS,\n            })}>\n            Active\n          </a>\n        </li>{' '}\n        <li>\n          <a\n            // href=\"#/completed\"\n            className={classNames({\n              selected: nowShowing === COMPLETED_TODOS,\n            })}>\n            Completed\n          </a>\n        </li>\n      </ul>\n      {clearButton}\n    </footer>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1648263507978\n      var cssReload = require(\"C:/Users/skye_/hello-modern/node_modules/.pnpm/mini-css-extract-plugin@2.4.7_webpack@5.70.0/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":[],"sourceRoot":""}